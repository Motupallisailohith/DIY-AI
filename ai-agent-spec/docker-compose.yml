version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-agent-network

  # Catalog Service - Agent Registry
  catalog-service:
    build: ./catalog-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: local-postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
    depends_on:
      - postgres
    networks:
      - ai-agent-network

  # Runner Service - Agent Execution
  runner-service:
    build: ./runner-service
    ports:
      - "8080:8080"
    environment:
      CATALOG_SERVICE_URL: http://catalog-service:8081
    depends_on:
      - catalog-service
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ai-agent-network

  # Pipeline Service - Workflow Orchestration
  pipeline-service:
    build: ./pipeline-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: local-postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
      CATALOG_SERVICE_URL: http://catalog-service:8081
      RUNNER_SERVICE_URL: http://runner-service:8080
    depends_on:
      - postgres
      - catalog-service
      - runner-service
    networks:
      - ai-agent-network

  # UI Service - Frontend
  ui-service:
    build: ./ui-service
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8082
    depends_on:
      - pipeline-service
    networks:
      - ai-agent-network

volumes:
  postgres_data:

networks:
  ai-agent-network:
    driver: bridge